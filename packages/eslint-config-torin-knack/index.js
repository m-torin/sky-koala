module.exports = {
  root: true,
  env: {
    es6: true,
    es2022: true,
    browser: true,
    node: true,
    jest: true,
  },
  parser: '@typescript-eslint/parser',
  plugins: [
    '@emotion',
    '@typescript-eslint',
    'graphql',
    'import',
    'jest-dom',
    'json',
    'jsx-a11y',
    'mui',
    'no-constructor-bind',
    'no-unsanitized',
    'prettier',
    'react',
    'simple-import-sort',
    'sonarjs',
    'sort-destructure-keys',
    'sort',
    'styled-components-a11y',
    'testing-library',
  ],
  extends: [
    'eslint:recommended',
    'plugin:sort/recommended',
    'plugin:eslint-comments/recommended',
    'plugin:jest-dom/recommended',
    'plugin:testing-library/react',
    'plugin:sonarjs/recommended',
    'plugin:json/recommended',
    'plugin:json/recommended',
    'plugin:markdown/recommended',
    'plugin:no-unsanitized/DOM',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:styled-components-a11y/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:@next/next/recommended',
    'plugin:@next/next/core-web-vitals',
    'plugin:unicorn/recommended',
    'plugin:prettier/recommended',
  ],
  rules: {
    // General overrides
    '@emotion/import-from-emotion': 'error',
    '@emotion/jsx-import': 'error',
    '@emotion/no-vanilla': 'error',
    '@emotion/pkg-renaming': 'error',
    '@emotion/styled-import': 'error',
    '@next/next/no-html-link-for-pages': 'off',
    'arrow-body-style': ['error', 'as-needed'],
    'capitalized-comments': 0,
    'global-require': 0, // Used by React Native.
    'jsx-a11y/anchor-is-valid': 'off',
    'jsx-a11y/no-autofocus': 'warn',
    'no-constructor-bind/no-constructor-bind': 'error',
    'no-constructor-bind/no-constructor-state': 'error',
    'no-mixed-operators': 'off',
    'no-multiple-empty-lines': ['error', {max: 2, maxBOF: 1}],
    'no-nested-ternary': 'error', // use Unicorn instead
    'no-param-reassign': ['error', {props: false}],
    'no-unused-vars': ['error', {argsIgnorePattern: '...'}], // Allow prop spreading
    'react-hooks/exhaustive-deps': 'off',
    'react/boolean-prop-naming': 'error',
    'react/button-has-type': 'error',
    'react/destructuring-assignment': [2, 'always'],
    'react/forbid-prop-types': ['error', {forbid: ['any']}],
    'react/jsx-filename-extension': [0, {extensions: ['.js']}],
    'react/jsx-props-no-spreading': 'off',
    'react/jsx-uses-react': 'off', // https://nextjs.org/docs/advanced-features/codemods#add-missing-react-import
    'react/no-typos': 'warn',
    'react/prefer-es6-class': [2, 'always'],
    'react/prefer-stateless-function': [2, {ignorePureComponents: true}],
    'react/prop-types': 'off', // TODO: Remove when tslinting restored
    'react/react-in-jsx-scope': 'off', // https://nextjs.org/docs/advanced-features/codemods#add-missing-react-import
    'react/require-default-props': 'warn',
    'sonarjs/cognitive-complexity': ['warn', 30],
    'testing-library/prefer-screen-queries': 'off',
    'testing-library/render-result-naming-convention': 'off',
    'react/jsx-sort-props': [
      2,
      {callbacksLast: true, shorthandLast: false, reservedFirst: true},
    ],

    // Typescript
    '@typescript-eslint/ban-ts-comment': 'off', // TODO: remove in UE-171
    '@typescript-eslint/no-empty-function': ['error', {allow: ['arrowFunctions']}],
    '@typescript-eslint/no-empty-interface': 'off', // TODO: remove in UE-171
    '@typescript-eslint/no-explicit-any': 'off', //TODO: needed since we are supporting both javascript and typescript at the same time
    '@typescript-eslint/no-unused-vars': 'off', // already exists in eslint
    '@typescript-eslint/no-var-requires': 'off', // Sometimes we need to require
    'no-empty-pattern': 'off', // TODO: remove in UE-171

    // Sorts & Imports
    'sort-destructure-keys/sort-destructure-keys': [2, {caseSensitive: false}],
    'sort-vars': ['error', {ignoreCase: true}],
    'sort/import-members': 'off',
    'sort/object-properties': 'off', // Conflicts with sx ordering
    'sort/imports': 'off',
    'import/default': 'warn',
    'import/extensions': [
      'error',
      'never',
      {
        css: 'always',
        graphql: 'always',
        json: 'always',
        png: 'always',
        scss: 'always',
        stories: 'always',
        styles: 'always',
        svg: 'always',
        types: 'always',
      },
    ],
    'import/first': 'error',
    'import/namespace': 'warn',
    'import/newline-after-import': 'error',
    'import/no-anonymous-default-export': ['error', {allowObject: true}],
    'import/no-duplicates': 'error',
    'import/no-extraneous-dependencies': 0, // monorepo setup
    'import/no-named-as-default-member': 'warn',
    'import/no-unresolved': 'off',
    'sort-imports': ['error', {ignoreDeclarationSort: true}],
    'import/order': [
      'error',
      {
        groups: [
          'builtin',
          'external',
          ['internal', 'parent'],
          ['index', 'sibling'],
          ['object', 'type'],
          'unknown',
        ],
        pathGroups: [
          // External
          {pattern: 'react', group: 'external', position: 'before'},
          // Nextjs app internal
          {pattern: '#/*', group: 'internal'},
          {pattern: '#/**', group: 'internal'},
          // React app internal
          {pattern: '@skyKoala/**', group: 'internal'},
          {pattern: '@components/**', group: 'internal'},
          {pattern: '@icons/**', group: 'internal'},
          {pattern: '@library/**', group: 'internal'},
          {pattern: '@nsui/**', group: 'internal'},
          {pattern: '@styles/**', group: 'internal'},
          {pattern: '@src/**', group: 'internal'},
          {pattern: '@utils/**', group: 'internal'},
          // React apps
          {pattern: '@uix-library/**', group: 'internal'},
          {pattern: '@worker/**', group: 'internal'},
          // Index, Sibling (legacy)
          {pattern: '@hooks/**', group: 'sibling'},
          // Object, Type
          {pattern: '{.,..}/**/*.json', group: 'object'},
          {pattern: '{.,..}/*.styles', group: 'object'},
          {pattern: '{.,..}/*.types', group: 'type'},
          {pattern: '@interfaces/**', group: 'type'},
          // UIX Lbrary
          {pattern: '@uix-brand/**', group: 'internal'},
          {pattern: '@uix-core/**', group: 'internal'},
          {pattern: '@uix-data/**', group: 'internal'},
          {pattern: '@uix-deprecated/**', group: 'internal'},
          {pattern: '@uix-display/**', group: 'internal'},
          {pattern: '@uix-experimental/**', group: 'internal'},
          {pattern: '@uix-integrations/**', group: 'internal'},
          {pattern: '@uix-layout/**', group: 'internal'},
          {pattern: '@uix-media/**', group: 'internal'},
          {pattern: '@uix-public/**', group: 'internal'},
          {pattern: '@uix-translations/**', group: 'internal'},
          {pattern: '@uix-utils/**', group: 'internal'},
        ],
        pathGroupsExcludedImportTypes: ['react'],
        'newlines-between': 'always-and-inside-groups',
        warnOnUnassignedImports: true,
        alphabetize: {
          order: 'asc', // based on import path
          caseInsensitive: true,
        },
      },
    ],
    'simple-import-sort/exports': 'warn',

    // Unicorn
    // Rules: https://github.com/sindresorhus/eslint-plugin-unicorn#rules
    'unicorn/better-regex': 'error',
    'unicorn/catch-error-name': 'error',
    'unicorn/consistent-destructuring': 'error',
    'unicorn/consistent-function-scoping': 'error',
    'unicorn/error-message': 'error',
    'unicorn/escape-case': 'error',
    'unicorn/expiring-todo-comments': 'warn',
    'unicorn/explicit-length-check': 'error',
    'unicorn/filename-case': 'off',
    'unicorn/import-index': 'off',
    'unicorn/import-style': 'warn',
    'unicorn/new-for-builtins': 'error',
    'unicorn/no-abusive-eslint-disable': 'error',
    'unicorn/no-array-callback-reference': 'error',
    'unicorn/no-array-for-each': 'off', // Prefer for…of over Array#forEach(…)
    'unicorn/no-array-method-this-argument': 'error',
    'unicorn/no-array-push-push': 'error',
    'unicorn/no-await-expression-member': 'error',
    'unicorn/no-console-spaces': 'error',
    'unicorn/no-document-cookie': 'error',
    'unicorn/no-empty-file': 'error',
    'unicorn/no-for-loop': 'error',
    'unicorn/no-hex-escape': 'error', // prefer unicode
    'unicorn/no-array-reduce': 'off',
    'unicorn/no-instanceof-array': 'error',
    'unicorn/no-keyword-prefix': 'off',
    'unicorn/no-nested-ternary': 'error',
    'unicorn/no-new-array': 'error',
    'unicorn/no-new-buffer': 'error',
    'unicorn/no-null': 'off',
    'unicorn/no-object-as-default-parameter': 'error',
    'unicorn/no-process-exit': 'error',
    'unicorn/no-static-only-class': 'error',
    'unicorn/no-thenable': 'error',
    'unicorn/no-this-assignment': 'error',
    'unicorn/no-unreadable-array-destructuring': 'error',
    'unicorn/no-unsafe-regex': 'off',
    'unicorn/no-unused-properties': 'warn',
    'unicorn/no-useless-fallback-in-spread': 'error',
    'unicorn/no-useless-length-check': 'error',
    'unicorn/no-useless-promise-resolve-reject': 'error',
    'unicorn/no-useless-spread': 'error', // trial
    'unicorn/no-useless-undefined': 'error',
    'unicorn/number-literal-case': 'error',
    'unicorn/prefer-add-event-listener': 'error',
    'unicorn/prefer-array-find': 'warn',
    'unicorn/prefer-array-flat': 'warn',
    'unicorn/prefer-array-flat-map': 'error',
    'unicorn/prefer-array-index-of': 'error',
    'unicorn/prefer-array-some': 'warn',
    'unicorn/prefer-at': 'off',
    'unicorn/prefer-code-point': 'error',
    'unicorn/prefer-date-now': 'error',
    'unicorn/prefer-default-parameters': 'error',
    'unicorn/prefer-dom-node-append': 'error',
    'unicorn/prefer-dom-node-dataset': 'error',
    'unicorn/prefer-dom-node-remove': 'error',
    'unicorn/prefer-export-from': 'error',
    'unicorn/prefer-includes': 'error',
    'unicorn/prefer-json-parse-buffer': 'error',
    'unicorn/prefer-keyboard-event-key': 'error',
    'unicorn/prefer-math-trunc': 'error',
    'unicorn/prefer-modern-dom-apis': 'error',
    'unicorn/prefer-module': 'off',
    'unicorn/prefer-negative-index': 'error',
    'unicorn/prefer-node-protocol': 'error', // makes it clear this this is a builtin module
    'unicorn/prefer-number-properties': 'error',
    'unicorn/prefer-object-from-entries': 'error',
    'unicorn/prefer-optional-catch-binding': 'error',
    'unicorn/prefer-prototype-methods': 'error',
    'unicorn/prefer-query-selector': 'error',
    'unicorn/prefer-reflect-apply': 'error',
    'unicorn/prefer-regexp-test': 'error',
    'unicorn/prefer-set-has': 'error',
    'unicorn/prefer-spread': 'error',
    'unicorn/prefer-string-replace-all': 'off',
    'unicorn/prefer-string-slice': 'error',
    'unicorn/prefer-string-starts-ends-with': 'error',
    'unicorn/prefer-string-trim-start-end': 'error',
    'unicorn/prefer-switch': 'off',
    'unicorn/prefer-ternary': 'error',
    'unicorn/prefer-top-level-await': 'off',
    'unicorn/prefer-type-error': 'warn',
    'unicorn/prevent-abbreviations': 'off',
    'unicorn/relative-url-style': ['error', 'always'],
    'unicorn/require-array-join-separator': 'error',
    'unicorn/require-number-to-fixed-digits-argument': 'error',
    'unicorn/require-post-message-target-origin': 'off',
    'unicorn/string-content': 'off',
    'unicorn/template-indent': 'off',
    'unicorn/throw-new-error': 'off',
    'testing-library/no-node-access': 'off',
  },
  overrides: [
    {
      // Storybook
      files: ['*.stories.js', '*.stories.tsx'],
      rules: {
        'import/no-anonymous-default-export': 'off',
        'no-unused-vars': 'off',
        'sort/exports': 'off',
        'sort/export-members': 'off',
        'sonarjs/no-duplicate-string': 'off',
        'sonarjs/no-identical-functions': 'off',
      },
    },
    {
      // Typescript definitions
      files: ['*.types.ts'],
      rules: {
        'no-unused-vars': 'off',
      },
    },
    {
      // Stylesheets
      files: ['*.styles.tsx'],
      rules: {
        'sonarjs/no-duplicate-string': 'off',
      },
    },
  ],
  settings: {
    react: {
      version: 'detect',
    },
    next: {
      rootDir: ['apps/*'],
    },
  },
  globals: {
    strapi: true,
    JSX: true,
    NodeJS: true,
    React: true,
  },
};
